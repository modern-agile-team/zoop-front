name: PR 템플릿 자동 완성

on:
  pull_request:
    types: [opened]

permissions:
  pull-requests: write
  contents: read

jobs:
  auto-fill-pr-template:
    name: PR 템플릿 자동 완성 작업
    runs-on: ubuntu-latest
    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 브랜치명에서 이슈 번호 추출
        id: extract-branch
        uses: ./.github/actions/extract-issue-numbers
        with:
          text: ${{ github.event.pull_request.head.ref }}
          source-type: 'branch-name'
          validate-issues: true

      - name: 커밋 메시지에서 이슈 번호 추출
        id: extract-commits
        uses: ./.github/actions/extract-issue-numbers
        with:
          text: commits
          source-type: 'commit-messages'
          pr-number: ${{ github.event.pull_request.number }}
          validate-issues: true

      - name: PR 템플릿 자동 완성 실행
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            const prBody = context.payload.pull_request.body || '';
            const headBranch = context.payload.pull_request.head.ref;

            // 이미 이슈 번호가 채워져 있는지 확인 (여러 패턴 지원)
            const hasIssueAlready = /(?:### 연관된 이슈|## 🔗 연관된 이슈)\s*\n\n(?!<!--)/.test(prBody);

            if (hasIssueAlready) {
              console.log('PR template already has issue numbers filled');
              return;
            }

            try {
              // 브랜치와 커밋에서 추출한 이슈 번호들 합치기
              const branchIssues = '${{ steps.extract-branch.outputs.valid-issues }}'.split(',').filter(n => n);
              const commitIssues = '${{ steps.extract-commits.outputs.valid-issues }}'.split(',').filter(n => n);
              
              // 중복 제거하여 모든 이슈 번호 합치기
              const allValidIssues = [...new Set([...branchIssues, ...commitIssues])];

              if (allValidIssues.length > 0) {
                // 이슈 번호들을 Closes 형태로 포맷팅
                const issueLinks = allValidIssues.map(num => `Closes #${num}`).join(', ');
                
                // PR 본문에서 연관된 이슈 섹션 찾아서 교체 (여러 패턴 지원)
                const patterns = [
                  /(### 연관된 이슈\s*\n+)<!-- 이슈 번호를 입력해주세요[\.\s]*예: Closes #123, Fixes #456, Resolves #789 -->[\s\S]*?(?=\n##|\n###|$)/,
                  /(## 🔗 연관된 이슈\s*\n+)<!-- 이슈 번호를 입력해주세요[\.\s]*예: Closes #123, Fixes #456, Resolves #789 -->[\s\S]*?(?=\n##|\n###|$)/
                ];
                
                let updatedBody = prBody;
                let wasUpdated = false;
                
                for (const pattern of patterns) {
                  const newBody = updatedBody.replace(pattern, `$1${issueLinks}\n`);
                  if (newBody !== updatedBody) {
                    updatedBody = newBody;
                    wasUpdated = true;
                    break;
                  }
                }

                if (wasUpdated) {
                  await github.rest.pulls.update({
                    owner,
                    repo,
                    pull_number: prNumber,
                    body: updatedBody
                  });
                  
                  console.log(`Auto-filled PR template with issues: ${issueLinks}`);
                  console.log(`Branch: ${headBranch}, Branch issues: ${branchIssues.join(', ')}, Commit issues: ${commitIssues.join(', ')}`);
                  
                  // PR에 코멘트 추가
                  await github.rest.issues.createComment({
                    owner,
                    repo,
                    issue_number: prNumber,
                    body: `🤖 **자동 감지된 연관 이슈들이 PR 템플릿에 자동으로 추가되었습니다**\n\n` +
                          `**감지된 이슈:** ${allValidIssues.map(num => `#${num}`).join(', ')}\n\n` +
                          `**브랜치명:** \`${headBranch}\`\n\n` +
                          `브랜치명과 커밋 메시지를 분석하여 자동으로 연결했습니다. 수정이 필요하시면 PR 설명을 직접 편집해주세요.`
                  });
                } else {
                  console.log('Failed to update PR template - pattern not found');
                  console.log(`Branch: ${headBranch}, PR Body preview: ${prBody.substring(0, 200)}`);
                }
              } else {
                console.log('No valid issues found');
                console.log(`Branch: ${headBranch}`);
              }
              
            } catch (error) {
              console.error('Error auto-filling PR template:', error);
            }
